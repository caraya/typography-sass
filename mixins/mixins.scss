////
/// @group Utilities
/// @author [Carlos Araya](http://publishing-project.rivendellweb.net/)
////


/// Eliminates ligatures and kearnings in devices with width of less than 480 pixels and smaller form factors
/// @access public
@mixin phone-rendering () {
  @media screen and (max-device-width: 480px) {
  body {
    text-rendering: optimizeSpeed;
    }
  }
}


/// Creates a 1 pixel solid border
/// @access public
@mixin solid-thin() {
  border-width: thin;
  border-style: solid;
}


/// Basic clearfix. Might change to a placeholder to be extended rather than a mixin to be included
/// @example scss Usage
///  .article {
///    font-size: 1em;
///    @include cf();
///  }
/// @example css Result
///  .article {
///    font-size: 1em; }
///  .article:after {
///    content: " ";
///    display: block;
///    clear: both;
///  }
/// @access public
/// @link http://web-design-weekly.com/2013/05/12/handy-sass-mixins/
@mixin cf() {
  &:after {
    content: " ";
    display: block;
    clear: both;
  }
}


/// Border radius mixin to keep your code DRY
/// @access public
/// @parameter {String} $radius [5px] - how much radius
/// @link http://web-design-weekly.com/2013/05/12/handy-sass-mixins/
@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
          border-radius: $radius;
  /* stops bg color from leaking outside the border: */
  background-clip: padding-box;
}

/// Centers a block element
/// @access public
/// @link http://web-design-weekly.com/2013/05/12/handy-sass-mixins/
%center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/// Clever way to provide width and height for an element
/// @access public
/// @parameter $width [null] - How wide
/// @parameter $height [$width] - How hight. Defaults to the width
/// @link http://web-design-weekly.com/2013/05/12/handy-sass-mixins/
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

/// This mixin automates the use of 2x retina images for devices that can handle them.
///
/// We could also do this as an unprefixed version and just use Autoprefixer, I leave that up to you
/// @example scss Usage
///   div.logo {
///     background: url("logo.png") no-repeat;
///     @include image-2x("logo2x.png", 100px, 25px);
///    }
/// @example css Result
///   div.logo {
///     background: url("logo.png") no-repeat;
///   }
///   @media
///     (min--moz-device-pixel-ratio: 1.3),
///     (-o-min-device-pixel-ratio: 2.6 / 2),
///     (-webkit-min-device-pixel-ratio: 1.3),
///     (min-device-pixel-ratio: 1.3),
///     (min-resolution: 1.3dppx) {
///       div.logo {
///         /* on retina, use image that's scaled by 2 */
///         background-image: url("logo2x.png");
///         background-size: 100px 25px;
///       }
///     }
/// @link http://web-design-weekly.com/2013/05/12/handy-sass-mixins/
/// @link https://css-tricks.com/box-sizing/
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing
/// @link http://www.paulirish.com/2012/box-sizing-border-box-ftw/
/// @link http://www.w3.org/TR/css3-ui/
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

